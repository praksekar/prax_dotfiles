;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-expression-history minibuffer-history extended-command-history counsel-M-x-history evil-ex-search-history evil-ex-history))
(setq minibuffer-history '("jdtls"))
(setq extended-command-history '("list-packages" "eshell" "save-buffer" "quit-window" "save-buffer" "lsp-python-ms-update-server" "lsp-java-update-project-configuration" "lsp-java-update-server" "lsp-mode" "lsp-install-server" "eshell"))
(setq counsel-M-x-history '(#("eshell" 0 6 (ivy-index 0))))
(setq evil-ex-search-history '("emacs" "literate" "lsp" "lsp-ui" "lsp" "\\<focused\\>" "company" "syntax" "flycheck" "sh" "doom!" "syntax" "xyntax" "company" "flycheck" "python" "lsp" "company" "zshrc" "zshconf" "PATH" "font" "theme" "mu4e"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1))))
(setq kill-ring '(#("

" 0 2 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("import subprocess
" 0 6 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-keyword-face) 6 18 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("

" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete) 1 2 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t)) #("        3 && 5
" 0 8 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 8 9 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face highlight-numbers-number) 9 13 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face highlight-numbers-number) 14 15 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete)) #("    if cond:
        pass
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 4 6 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 6 21 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 21 22 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete face font-lock-keyword-face) 22 25 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 25 26 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete)) #("r" 0 1 (ws-butler-chg delete fontified t)) #("t" 0 1 (ws-butler-chg chg fontified t)) #("i = 3
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-variable-name-face) 1 4 (yank-handler (evil-yank-line-handler nil t) fontified t) 4 5 (yank-handler (evil-yank-line-handler nil t) fontified t face highlight-numbers-number) 5 6 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("        while (true) {
            
        }

" 0 8 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 8 13 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 14 15 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 15 19 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-constant-face) 19 20 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 20 21 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 21 22 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 22 35 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 35 36 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete) 36 44 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 44 45 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 45 46 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete) 46 47 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg delete fontified t)) #("        }
" 0 8 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t) 8 9 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t face (rainbow-delimiters-depth-2-face)) 9 10 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg delete fontified t)) #("        while (true) {
" 0 8 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 8 13 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 14 15 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 15 19 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-constant-face) 19 20 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 20 21 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 21 22 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 22 23 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg)) #("while" 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified t) 1 2 (face font-lock-keyword-face ws-butler-chg chg fontified t) 2 3 (face font-lock-keyword-face ws-butler-chg chg fontified t) 3 4 (face font-lock-keyword-face ws-butler-chg chg fontified t) 4 5 (face font-lock-keyword-face ws-butler-chg chg fontified t)) #("    if (3)
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 4 5 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 6 7 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 7 8 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 8 9 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face highlight-numbers-number) 9 10 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face (rainbow-delimiters-depth-3-face)) 10 11 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete)) #("ran
" 0 3 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 3 4 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("        with
" 0 8 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 8 12 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 12 13 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete)) #("3" 0 1 (face highlight-numbers-number fontified t)) #("return" 0 1 (face font-lock-keyword-face fontified t) 1 6 (face font-lock-keyword-face fontified t)) #(";" 0 1 (ws-butler-chg chg fontified t)) #("(" 0 1 (ws-butler-chg chg fontified t)) #("while True:
" 0 5 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg) 6 10 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg face font-lock-constant-face) 10 12 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg)) #("while
" 0 5 (yank-handler (evil-yank-line-handler nil t) face font-lock-keyword-face ws-butler-chg chg fontified t) 5 6 (yank-handler (evil-yank-line-handler nil t))) #("for i in range()
" 0 3 (yank-handler (evil-yank-line-handler nil t) face font-lock-keyword-face ws-butler-chg chg fontified t) 3 6 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t) 6 8 (yank-handler (evil-yank-line-handler nil t) face font-lock-keyword-face ws-butler-chg chg fontified t) 8 9 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t) 9 14 (yank-handler (evil-yank-line-handler nil t) face font-lock-builtin-face ws-butler-chg chg fontified t) 14 15 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t) 15 16 (yank-handler (evil-yank-line-handler nil t) ws-butler-chg chg fontified t) 16 17 (yank-handler (evil-yank-line-handler nil t))) #("for i in range(3, 5):
    print(\"hello\")
" 0 3 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-keyword-face) 3 6 (yank-handler (evil-yank-line-handler nil t) fontified t) 6 8 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-keyword-face) 8 9 (yank-handler (evil-yank-line-handler nil t) fontified t) 9 14 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-builtin-face) 14 15 (yank-handler (evil-yank-line-handler nil t) fontified t) 15 16 (yank-handler (evil-yank-line-handler nil t) fontified t face highlight-numbers-number) 16 18 (yank-handler (evil-yank-line-handler nil t) fontified t) 18 19 (yank-handler (evil-yank-line-handler nil t) fontified t face highlight-numbers-number) 19 26 (yank-handler (evil-yank-line-handler nil t) fontified t) 26 31 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-keyword-face) 31 32 (yank-handler (evil-yank-line-handler nil t) fontified t) 32 33 (yank-handler (evil-yank-line-handler nil t) syntax-table (15) fontified t face font-lock-string-face) 33 38 (yank-handler (evil-yank-line-handler nil t) fontified t face font-lock-string-face) 38 39 (yank-handler (evil-yank-line-handler nil t) syntax-table (15) fontified t face font-lock-string-face) 39 41 (yank-handler (evil-yank-line-handler nil t) fontified t)) "hello" #("for i in range(3, 4)
" 0 3 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 3 6 (fontified t yank-handler (evil-yank-line-handler nil t)) 6 8 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t yank-handler (evil-yank-line-handler nil t)) 9 14 (face font-lock-builtin-face fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (fontified t yank-handler (evil-yank-line-handler nil t)) 15 16 (face highlight-numbers-number fontified t yank-handler (evil-yank-line-handler nil t)) 16 18 (fontified t yank-handler (evil-yank-line-handler nil t)) 18 19 (face highlight-numbers-number fontified t yank-handler (evil-yank-line-handler nil t)) 19 21 (fontified t yank-handler (evil-yank-line-handler nil t))) #("import lib as alias
" 0 6 (face font-lock-keyword-face ws-butler-chg chg fontified t yank-handler (evil-yank-line-handler nil t)) 6 11 (ws-butler-chg chg fontified t yank-handler (evil-yank-line-handler nil t)) 11 13 (face font-lock-keyword-face ws-butler-chg chg fontified t yank-handler (evil-yank-line-handler nil t)) 13 20 (ws-butler-chg chg fontified t yank-handler (evil-yank-line-handler nil t))) #("class java
" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 1 2 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 4 5 (fontified t ws-butler-chg chg face font-lock-keyword-face c-type c-decl-type-start yank-handler (evil-yank-line-handler nil t)) 5 6 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 6 8 (fontified t ws-butler-chg chg face font-lock-type-face yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t ws-butler-chg chg face font-lock-type-face yank-handler (evil-yank-line-handler nil t)) 9 10 (fontified t ws-butler-chg chg face font-lock-type-face yank-handler (evil-yank-line-handler nil t)) 10 11 (yank-handler (evil-yank-line-handler nil t))) #("impo
" 0 1 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 1 2 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 4 5 (yank-handler (evil-yank-line-handler nil t))) #(";" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face)) #(";" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) #(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg delete fontified t)) #(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) #("t" 0 1 (face (org-block) font-lock-multiline t ws-butler-chg delete src-block t help-echo nil font-lock-fontified t fontified t)) #("lsp-ui-doc-enable " 0 17 (src-block t help-echo nil face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 17 18 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete font-lock-fontified t src-block t font-lock-multiline t face (org-block))) #(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t ws-butler-chg delete)) #(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t ws-butler-chg chg)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg chg rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) ";;(setq lsp-ui-doc-enable t)
" #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t ws-butler-chg delete font-lock-fontified t font-lock-multiline t src-block t)) ";;(setq lsp-ui-doc-enable t)
" #(";" 0 1 (ws-butler-chg delete fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg chg fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg delete fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg chg fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg delete fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg chg fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg delete fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg chg fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg delete fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (ws-butler-chg chg fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t ws-butler-chg delete fontified t yank-handler (evil-yank-line-handler nil t))) "  ;;(use-package flycheck-pos-tip
  ;;:config
    ;;(global-flycheck-mode)
    ;;(with-eval-after-load 'flycheck
	;;(flycheck-pos-tip-mode)))
" #("company-quickhelp" 0 17 (fontified nil ws-butler-chg chg)) #("(package! company-quickhelp)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 1 9 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 9 27 (fontified t yank-handler (evil-yank-line-handler nil t)) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 28 29 (fontified t yank-handler (evil-yank-line-handler nil t))) #("construct_lemonbar_string
" 0 25 (ws-butler-chg chg fontified t yank-handler (evil-yank-line-handler nil t)) 25 26 (ws-butler-chg delete fontified t yank-handler (evil-yank-line-handler nil t))) #("public class
" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 1 2 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 4 5 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 5 6 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 6 7 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 7 8 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 9 10 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 10 11 (fontified t ws-butler-chg chg face font-lock-keyword-face yank-handler (evil-yank-line-handler nil t)) 11 12 (fontified t ws-butler-chg chg face font-lock-keyword-face c-type c-decl-type-start yank-handler (evil-yank-line-handler nil t)) 12 13 (yank-handler (evil-yank-line-handler nil t))) #("from  
" 0 1 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 1 2 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 4 5 (fontified t ws-butler-chg chg yank-handler (evil-yank-line-handler nil t)) 5 6 (fontified t ws-butler-chg delete yank-handler (evil-yank-line-handler nil t)) 6 7 (yank-handler (evil-yank-line-handler nil t))) #("impor" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg))))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
